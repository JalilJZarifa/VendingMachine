#BlueJ class context
comment0.target=Student
comment1.params=flavour\ machine
comment1.target=Student(java.lang.String,\ SnackMachine)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Student.\ The\ string\ parameter\ is\ used\ to\ initialise\ the\ student's\ favourite,\ this\ is\ the\ same\ with\ the\ snack\ machine\r\n\ class\ being\ used\ to\ initialise\ Smachine\ \=\ machine.\r\n
comment2.params=
comment2.target=void\ buyCrisps()
comment2.text=\r\n\ If\ the\ amount\ inside\ of\ the\ pocket\ in\ terms\ of\ pennies\ is\ less\ than\ the\ price\ retrieved\ from\ the\ machine,\ a\ statement\ indicating\ the\ lack\ of\ pennies\r\n\ will\ be\ displayed.\ The\ student's\ ID\ number\ (being\ the\ student\ object\ +\ the\ ID\ number)\ will\ be\ added\ into\ the\ statement\ to\ indicate\ which\ student\ is\ \r\n\ attempting\ to\ buy\ crisps.\ The\ same\ is\ done\ in\ the\ else\ if,\ however\ the\ only\ difference\ is\ that\ the\ comparison\ is\ between\ how\ many\ of\ the\ student's\r\n\ favourite\ packs\ are\ in\ the\ snack\ machine\ (Smachine).\ Again,\ if\ there\ aren't\ any\ packs\ available,\ a\ statement\ will\ be\ displayed.\r\n\ \r\n\ The\ last\ else\ indicates\ that\ the\ student\ has\ enought\ money\ and\ their\ favourite\ is\ available.\ As\ such,\ a\ new\ penny\ object\ is\ created\ where\ the\ snack\r\n\ machine\ uses\ this\ to\ insert\ into\ the\ machine\ where\ the\ price\ will\ be\ incremented.\ A\ penny\ is\ then\ removed\ from\ the\ pocket\ of\ the\ student.\ This\ is\r\n\ essentailly\ the\ student\ purchasing\ the\ packet\ of\ crisps\ in\ an\ exchange\ of\ goods.\r\n\ \r\n\ After\ this\ the\ method\ buyPack\ is\ used\ from\ the\ SnackMachine\ class\ to\ give\ to\ the\ student\ and\ to\ do\ this\ a\ new\ object\ is\ created\ and\ given\ the\ value\r\n\ of\ the\ student\ pack\ and\ so\ the\ student\ now\ has\ the\ packet\ of\ crisps.\r\n
comment3.params=
comment3.target=void\ snackTime()
comment3.text=\r\n\ If\ there\ is\ no\ pack\ currently\ present\ -\ this\ means\ that\ the\ student\ hasn't\ bought\ one\ and\ needs\ to\ buy\ one,\ as\ such\ the\ buyCrisps\ method\ is\ called.\r\n\ If\ there\ is\ a\ pack\ and\ it's\ closed\ -\ the\ student\ needs\ to\ simply\ open\ the\ pack\ and\ so\ the\ open\ pack\ method\ from\ the\ PackOfCrisps\ class\ is\ called.\r\n\ If\ there\ is\ a\ pack\ and\ it's\ not\ currently\ empty,\ a\ statement\ indiciating\ that\ the\ student\ is\ eating\ their\ favourite\ crisps\ is\ displayed.\r\n\ While\ there\ is\ a\ pack\ and\ it's\ not\ empty,\ the\ eatCrisp()\ method\ will\ continue\ to\ be\ called.\r\n\ After\ the\ pack\ has\ been\ finished,\ a\ print\ statement\ is\ displayed\ and\ the\ pack\ is\ returned\ to\ null.\r\n\ \r\n
numComments=4
