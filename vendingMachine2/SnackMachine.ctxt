#BlueJ class context
comment0.target=SnackMachine
comment1.params=maxCrisps\ packCost
comment1.target=SnackMachine(int,\ int)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Student\r\n
comment2.params=
comment2.target=int\ getCost()
comment2.text=\r\n\ This\ method\ returns\ an\ int,\ being\ the\ cost\ of\ the\ pack.\r\n
comment3.params=pack
comment3.target=void\ addPack(PackOfCrisps)
comment3.text=\r\n\ This\ method\ adds\ a\ pack\ of\ crisps\ to\ the\ snack\ machine.\ The\ PackOfCrisps\ class\ is\ used\ to\ create\ the\ pack\ object\ which\ is\ then\ used\ to\ add\ to\ the\r\n\ machine.\ If\ the\ size\ of\ the\ array\ packets\ is\ smaller\ than\ the\ size\ of\ the\ initally\ stated\ capacity,\ a\ packet\ is\ added\ to\ the\ machine,\ else\ the\ system\r\n\ will\ print\ out\ a\ statement\ explaining\ that\ the\ maximum\ has\ been\ reached.\r\n
comment4.params=flavour
comment4.target=int\ countPacks(java.lang.String)
comment4.text=\r\n\ This\ method\ returns\ an\ int\ as\ it's\ purpose\ is\ to\ count\ the\ packs\ in\ the\ machine.\ A\ string\ parameter\ is\ used\ to\ compare\ the\ flavours.\ A\ for\ loop\ is\ \r\n\ executed\ to\ go\ through\ each\ element\ of\ the\ array,\ it\ will\ increment\ until\ the\ size\ of\ the\ array\ is\ reached.\ An\ if\ statement\ is\ used\ to\ check\ each\r\n\ element\ of\ the\ array.\ If\ the\ flavour\ requested\ is\ the\ same\ as\ the\ flavour\ in\ the\ array,\ it\ will\ use\ the\ get\ method\ to\ get\ the\ index\ of\ the\ element\r\n\ in\ the\ array,\ the\ flavour\ it\ is\ (element)\ and\ compare\ it\ to\ the\ flavour\ initially\ requested.\ This\ is\ why\ it\ is\ in\ the\ brackets\ of\ the\ signature.\ An\ \r\n\ int\ variable,\ c,\ is\ given\ the\ value\ 0\ and\ incremets\ each\ time\ the\ if\ statement\ executes\ (which\ means\ each\ time\ the\ flavour\ requested\ has\ been\r\n\ counted).\ As\ a\ result,\ the\ number\ returned\ will\ be\ the\ amount\ of\ the\ packet\ that\ is\ available\ in\ the\ array.\r\n
comment5.params=penny
comment5.target=void\ insertMoney(Penny)
comment5.text=\r\n\ This\ method\ simply\ adds\ a\ penny\ to\ the\ pennies\ array.\ Each\ time\ this\ happens,\ the\ payment\ variable\ is\ incremented\ to\ ensure\ that\ there\ is\ enough\r\n\ purchasing\ power\ (essentially\ enough\ pennies\ in\ the\ machine).\ The\ Penny\ object\ in\ the\ signature\ is\ created\ to\ be\ able\ to\ add\ a\ penny\ into\ the\ array.\r\n
comment6.params=flavour
comment6.target=PackOfCrisps\ buyPack(java.lang.String)
comment6.text=\r\n\ The\ buyPack\ function\ uses\ an\ if\ statement\ to\ check\ whether\ the\ payment\ given\ is\ greater\ than\ or\ equal\ to\ the\ cost.\ If\ so,\ a\ for\ loop\ will\ be\ executed\r\n\ where\ it\ will\ go\ through\ the\ size\ of\ the\ array\ (Which\ is\ the\ whole\ array).\ This\ is\ done\ one\ by\ one.\ For\ each\ element\ it\ will\ check\ if\ the\ flavour\ \r\n\ requested\ (Which\ is\ why\ the\ string\ parameter\ flavour\ is\ present\ -\ to\ compare\ the\ flavours)\ is\ the\ one\ in\ the\ array.\ If\ so,\ c,\ which\ was\ initially\r\n\ given\ the\ value\ 0,\ will\ take\ the\ value\ of\ the\ index\ of\ the\ flavour\ and\ then\ be\ removed\ from\ the\ array.\ This\ is\ essentally\ a\ crisp\ packet\ being\ \r\n\ bought\ and\ taken\ out\ a\ snack\ machine.\ A\ new\ PackOfCrisps\ object\ is\ created\ (Which\ is\ why\ the\ class\ is\ in\ the\ signature)\ where\ it\ takes\ on\ the\ value\r\n\ of\ the\ flavour\ which\ has\ been\ requested.\ The\ payment\ from\ the\ user\ is\ then\ taken\ down\ to\ 0\ and\ no\ change\ is\ given\ -\ this\ may\ be\ recognised\ as\ a\ flaw\r\n\ of\ the\ method.\ The\ packet\ of\ crisp\ object\ is\ then\ returned\ through\ the\ form\ of\ x.\ The\ class\ otherwise\ returns\ null\ which\ means\ that\ the\ payment\ was\r\n\ not\ higher\ or\ equal\ to\ the\ cost.\r\n
comment7.params=
comment7.target=void\ describe()
comment7.text=\r\n\ This\ method\ simply\ outputs\ the\ amount\ of\ crisp\ packets\ in\ the\ snack\ machine\ by\ taking\ the\ size\ of\ the\ array.\ It\ then\ counts\ the\ amount\ of\ pennies\r\n\ through\ the\ payment\ variable\ which\ inceremented\ each\ time\ a\ penny\ was\ added\ in\ the\ insetMoney()\ method.\r\n
numComments=8
